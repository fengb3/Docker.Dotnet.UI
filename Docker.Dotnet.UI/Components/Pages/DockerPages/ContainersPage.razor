@page "/containers"
@using Docker.DotNet
@using Docker.DotNet.Models
@using Docker.Dotnet.UI.ViewModels
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@implements IDisposable

@inherits MyComponentBase<Docker.Dotnet.UI.ViewModels.ContainersPageViewModel>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-4">
    <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Class="mb-4">
        <MudText Typo="Typo.h4">@Localizer["DOCKER_CONTAINERS"]</MudText>
        <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
        @if (Vm.SelectedContainerIds.Count > 0)
        {
            <MudText Typo="Typo.body1">
                <strong>@Vm.SelectedContainerIds.Count</strong> @Localizer["SELECTED_ITEMS"]
            </MudText>
                <MudButton Variant="Variant.Filled" 
                            Color="Color.Success" 
                            StartIcon="@Icons.Material.Filled.PlayArrow"
                            OnClick="@(() => Vm!.StartSelectedContainersAsync())">
                    @Localizer["START_SELECTED"]
                </MudButton>
                <MudButton Variant="Variant.Filled" 
                            Color="Color.Warning" 
                            StartIcon="@Icons.Material.Filled.Stop"
                            OnClick="@(() => Vm!.StopSelectedContainersAsync())">
                    @Localizer["STOP_SELECTED"]
                </MudButton>
                <MudButton Variant="Variant.Filled" 
                            Color="Color.Error" 
                            StartIcon="@Icons.Material.Filled.Delete"
                            OnClick="@(() => ConfirmRemoveSelected())">
                    @Localizer["REMOVE_SELECTED"]
                </MudButton>
                <MudSpacer/>
                <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                <MudSpacer/>
        }
        <MudButton Variant="Variant.Filled" 
                   Color="Color.Primary" 
                   StartIcon="@Icons.Material.Filled.Refresh"
                   OnClick="@(() => Vm!.RefreshContainersAsync())">
            @Localizer["REFRESH"]
        </MudButton>
        </MudStack>
    </MudStack>
    
    @if (Vm?.HasError == true)
    {
        <MudAlert Severity="Severity.Error" Class="mb-4" ShowCloseIcon="true" CloseIconClicked="@(() => Vm.ErrorMessage = null)">
            @Vm.ErrorMessage
        </MudAlert>
    }
    
    <!-- Search and Filter Bar -->
    <MudPaper Class="pa-3 mb-3" Elevation="1">
        <MudGrid Spacing="2">
            <MudItem xs="12" md="8">
                <MudTextField @bind-Value="Vm!.SearchText" 
                              Label="@Localizer["SEARCH"]"
                              Placeholder="@Localizer["SEARCH_PLACEHOLDER"]"
                              Adornment="Adornment.Start" 
                              AdornmentIcon="@Icons.Material.Filled.Search"
                              Immediate="true"
                              OnKeyUp="@(() => Vm.ApplyFilters())"
                              Variant="Variant.Outlined" />
            </MudItem>
            <MudItem xs="12" md="4">
                <MudSelect Value="Vm.StatusFilter" 
                           Label="@Localizer["FILTER_BY_STATUS"]"
                           T="string"
                           ValueChanged="@((string val) => { Vm.StatusFilter = val; Vm.ApplyFilters(); })"
                           Variant="Variant.Outlined">
                    <MudSelectItem Value="@("all")">@Localizer["ALL_STATUS"]</MudSelectItem>
                    <MudSelectItem Value="@("running")">@Localizer["RUNNING"]</MudSelectItem>
                    <MudSelectItem Value="@("exited")">@Localizer["STOPPED"]</MudSelectItem>
                    <MudSelectItem Value="@("paused")">@Localizer["PAUSED"]</MudSelectItem>
                </MudSelect>
            </MudItem>
        </MudGrid>
    </MudPaper>

    <!-- Batch Actions Toolbar -->
    
    @if (Vm?.Containers == null || Vm.Containers.Count == 0)
    {
           <MudAlert Severity="Severity.Info">@Localizer["NO_CONTAINERS"]</MudAlert>
    }
    else
    {
        <MudPaper Class="pa-3 mb-3" Elevation="0" >
            <MudGrid Spacing="2">
                <MudItem xs="1" Class="d-flex align-center">
                    <MudCheckBox T="bool" Value="@Vm.SelectAll" 
                                 ValueChanged="@((bool val) => Vm!.ToggleSelectAll())" 
                                 Color="Color.Primary" />
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="1" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["STATUS"]</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>  
                <MudItem xs="2" Class="d-flex align-center">
                        <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["CONTAINER_NAME"]</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="2" Class="d-flex align-center">
                        <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["IMAGE"]</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="1" Class="d-flex align-center">
                        <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["CONTAINER_ID"]</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="2" Class="d-flex align-center">
                        <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["PORT_MAPPINGS"]</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="3" Class="d-flex align-center justify-end pr-8">
                        <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["ACTIONS"]</MudText>
                </MudItem>
            </MudGrid>
        </MudPaper>
        
        <MudStack Spacing="2">
            @foreach (var container in Vm.Containers)
            {
                <MudCard Class="pa-3">
                    <MudGrid Spacing="2">
                        <MudItem xs="1" Class="d-flex align-center">
                            <MudCheckBox T="bool" 
                                         Value="@Vm.SelectedContainerIds.Contains(container.ID)" 
                                         ValueChanged="@((bool val) => Vm!.ToggleContainerSelection(container.ID))" 
                                         Color="Color.Primary" />
                        </MudItem>
                        
                        <MudItem xs="1" Class="d-flex align-center">
                            <MudChip T="string" Color="container.StateColor" Size="Size.Small">
                                @container.State
                            </MudChip>
                        </MudItem>
                        
                        <MudItem xs="2" Class="d-flex align-center">
                            <MudText Typo="Typo.body2" Style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                @container.ContainerName
                            </MudText>
                        </MudItem>
                        
                        <MudItem xs="2" Class="d-flex align-center">
                            <MudText Typo="Typo.body2" Style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                @container.Image
                            </MudText>
                        </MudItem>
                        
                        <MudItem xs="1" Class="d-flex align-center">
                            <MudText Typo="Typo.body2">@container.ShortId</MudText>
                        </MudItem>
                        
                        <MudItem xs="2" Class="d-flex align-center">
                            @if (container.Ports != null && container.Ports.Any())
                            {
                                <MudStack Row="true" Spacing="1" Style="overflow: hidden;">
                                    @foreach (var port in container.Ports.Take(2))
                                    {
                                        <MudChip T="string" Size="Size.Small" Variant="Variant.Outlined">
                                            @if (port.PublicPort > 0)
                                            {
                                                <text>@port.PublicPort:@port.PrivatePort</text>
                                            }
                                            else
                                            {
                                                <text>@port.PrivatePort</text>
                                            }
                                        </MudChip>
                                    }
                                    @if (container.Ports.Count > 2)
                                    {
                                        <MudChip T="string" Size="Size.Small" Variant="Variant.Outlined">+@(container.Ports.Count - 2)</MudChip>
                                    }
                                </MudStack>
                            }
                            else
                            {
                                <MudText Typo="Typo.body2" Color="Color.Secondary">-</MudText>
                            }
                        </MudItem>
                        
                        <MudItem xs="3" Class="d-flex align-center justify-end">
                            <MudStack Row="true" Spacing="1">
                                @if (container.State == "running")
                                {
                                        <MudIconButton Icon="@Icons.Material.Filled.Stop" 
                                                       Color="Color.Warning"
                                                       Size="Size.Small"
                                                       OnClick="@(() => Vm!.StopContainerAsync(container.ID))"
                                                       title='@Localizer["STOP"]' />
                                        <MudIconButton Icon="@Icons.Material.Filled.RestartAlt" 
                                                       Color="Color.Info"
                                                       Size="Size.Small"
                                                       OnClick="@(() => Vm!.RestartContainerAsync(container.ID))"
                                                       title='@Localizer["RESTART"]' />
                                        <MudIconButton Icon="@Icons.Material.Filled.Pause" 
                                                       Color="Color.Secondary"
                                                       Size="Size.Small"
                                                       OnClick="@(() => Vm!.PauseContainerAsync(container.ID))"
                                                       title='@Localizer["PAUSE"]' />
                                }
                                else if (container.State == "paused")
                                {
                                        <MudIconButton Icon="@Icons.Material.Filled.PlayArrow" 
                                                       Color="Color.Success"
                                                       Size="Size.Small"
                                                       OnClick="@(() => Vm!.UnpauseContainerAsync(container.ID))"
                                                       title='@Localizer["UNPAUSE"]' />
                                }
                                else
                                {
                                        <MudIconButton Icon="@Icons.Material.Filled.PlayArrow" 
                                                       Color="Color.Success"
                                                       Size="Size.Small"
                                                       OnClick="@(() => Vm!.StartContainerAsync(container.ID))"
                                                       title='@Localizer["START"]' />
                                }
                                
                                    <MudIconButton Icon="@Icons.Material.Filled.Article" 
                                                   Color="Color.Primary"
                                                   Size="Size.Small"
                                                   OnClick="@(() => Vm!.ShowLogsAsync(container.ID, container.ContainerName))"
                                                   title='@Localizer["LOGS"]' />
                                
                                    <MudIconButton Icon="@Icons.Material.Filled.BarChart" 
                                                   Color="Color.Info"
                                                   Size="Size.Small"
                                                   OnClick="@(() => Vm!.ShowStatsAsync(container.ID, container.ContainerName))"
                                                   title='@Localizer["STATS"]' />
                                
                                    <MudIconButton Icon="@Icons.Material.Filled.Info" 
                                                   Color="Color.Primary"
                                                   Size="Size.Small"
                                                   OnClick="@(() => Vm!.ShowInspectAsync(container.ID, container.ContainerName))"
                                                   title='@Localizer["INSPECT"]' />
                                
                                    <MudIconButton Icon="@Icons.Material.Filled.Delete" 
                                                   Color="Color.Error"
                                                   Size="Size.Small"
                                                   OnClick="@(() => Vm!.DeleteContainerAsync(container.ID))"
                                                   title='@Localizer["REMOVE"]' />
                            </MudStack>
                        </MudItem>
                    </MudGrid>
                </MudCard>
            }
        </MudStack>
    }
</MudContainer>

<MudDialog @bind-Visible="Vm!.ShowLogsDialog" Options="Vm!.DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Article" Class="mr-1" /> @Localizer["CONTAINER_LOGS"] - @Vm.SelectedContainerName
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (Vm.IsLoadingLogs)
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-2" />
            <MudText>@Localizer["LOADING_LOGS"]</MudText>
        }
        else if (Vm.ContainerLogs.Count == 0)
        {
            <MudAlert Severity="Severity.Info">@Localizer["NO_LOGS_AVAILABLE"]</MudAlert>
        }
        else
        {
            <MudPaper Class="pa-2" Style="height: 500px; overflow-y: auto; background-color: #1e1e1e; color: #d4d4d4; font-family: monospace; font-size: 12px;">
                @foreach (var log in Vm.ContainerLogs)
                {
                    <div>@log</div>
                }
            </MudPaper>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Vm.CloseLogsDialog">@Localizer["CANCEL"]</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-Visible="Vm!.ShowInspectDialog" Options="Vm!.DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Info" Class="mr-1" /> @Localizer["CONTAINER_DETAILS"] - @Vm.SelectedContainerName
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (string.IsNullOrEmpty(Vm.InspectJson))
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-2" />
        }
        else
        {
            <MudPaper Class="pa-2" Style="height: 500px; overflow-y: auto; background-color: #1e1e1e; color: #d4d4d4; font-family: monospace; font-size: 12px; white-space: pre;">@Vm.InspectJson</MudPaper>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Vm.CloseInspectDialog">@Localizer["CANCEL"]</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-Visible="Vm!.ShowStatsDialog" Options="Vm!.DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.BarChart" Class="mr-1" /> @Localizer["REAL_TIME_STATS"] - @Vm.SelectedContainerName
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (Vm.CurrentStats == null)
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-2" />
            <MudText Typo="Typo.body2">@Localizer["LOADING_LOGS"]</MudText>
        }
        else
        {
            <MudGrid Spacing="3">
                <MudItem xs="12" md="6">
                    <MudPaper Class="pa-4" Elevation="2">
                        <MudStack Spacing="2">
                            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                                <MudText Typo="Typo.h6">@Localizer["CPU_USAGE"]</MudText>
                                <MudText Typo="Typo.h6" Color="Color.Primary">@Vm.CpuPercent.ToString("0.00")%</MudText>
                            </MudStack>
                            <MudProgressLinear Color="Color.Primary" Value="@Vm.CpuPercent" Class="mt-2" />
                        </MudStack>
                    </MudPaper>
                </MudItem>
                
                <MudItem xs="12" md="6">
                    <MudPaper Class="pa-4" Elevation="2">
                        <MudStack Spacing="2">
                            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                                <MudText Typo="Typo.h6">@Localizer["MEMORY_USAGE"]</MudText>
                                <MudText Typo="Typo.h6" Color="Color.Secondary">@Vm.MemoryPercent.ToString("0.00")%</MudText>
                            </MudStack>
                            <MudProgressLinear Color="Color.Secondary" Value="@Vm.MemoryPercent" Class="mt-2" />
                            <MudText Typo="Typo.body2">@Vm.MemoryUsage / @Vm.MemoryLimit</MudText>
                        </MudStack>
                    </MudPaper>
                </MudItem>
                
                <MudItem xs="12" md="6">
                    <MudPaper Class="pa-4" Elevation="2">
                        <MudStack Spacing="2">
                            <MudText Typo="Typo.h6">@Localizer["NETWORK_RX"]</MudText>
                            <MudText Typo="Typo.h5" Color="Color.Info">@Vm.NetworkRx</MudText>
                        </MudStack>
                    </MudPaper>
                </MudItem>
                
                <MudItem xs="12" md="6">
                    <MudPaper Class="pa-4" Elevation="2">
                        <MudStack Spacing="2">
                            <MudText Typo="Typo.h6">@Localizer["NETWORK_TX"]</MudText>
                            <MudText Typo="Typo.h5" Color="Color.Success">@Vm.NetworkTx</MudText>
                        </MudStack>
                    </MudPaper>
                </MudItem>
            </MudGrid>
            
            <MudText Typo="Typo.caption" Class="mt-4" Color="Color.Secondary">
                <MudIcon Icon="@Icons.Material.Filled.Refresh" Size="Size.Small" /> @Localizer["AUTO_REFRESH"]: 2s
            </MudText>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Vm.CloseStatsDialog">@Localizer["CANCEL"]</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Inject] private IDialogService DialogService { get; set; } = default!;

    private async Task ConfirmRemoveSelected()
    {
        if (Vm?.SelectedContainerIds == null || Vm.SelectedContainerIds.Count == 0)
        {
            return;
        }

        var parameters = new DialogParameters
        {
            { "ContentText", string.Format(Localizer["CONFIRM_REMOVE_SELECTED"], Vm.SelectedContainerIds.Count) },
            { "ButtonText", Localizer["REMOVE"] },
            { "Color", Color.Error }
        };

        var dialog = await DialogService.ShowAsync<MudMessageBox>(Localizer["REMOVE_SELECTED"], parameters);
        var result = await dialog.Result;

        if (result != null && !result.Canceled)
        {
            await Vm!.RemoveSelectedContainersAsync();
        }
    }

    public void Dispose()
    {
        // Clean up resources if needed
    }
}