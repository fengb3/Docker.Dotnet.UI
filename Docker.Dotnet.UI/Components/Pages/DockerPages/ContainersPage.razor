@page "/containers"
@using Docker.DotNet
@using Docker.DotNet.Models
@using Docker.Dotnet.UI.ViewModels
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@implements IDisposable

@inherits MyComponentBase<Docker.Dotnet.UI.ViewModels.ContainersPageViewModel>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-4">
    <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Class="mb-4">
        <MudText Typo="Typo.h4">@Localizer["DOCKER_CONTAINERS"]</MudText>
        <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
            @if (Vm!.SelectedContainerIds.Count > 0)
            {
                <MudText Typo="Typo.body1">
                    <strong>@Vm!.SelectedContainerIds.Count</strong> @Localizer["SELECTED_ITEMS"]
                </MudText>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Success"
                           StartIcon="@Icons.Material.Filled.PlayArrow"
                           OnClick="@(() => Vm!.StartSelectedContainersAsync())">
                    @Localizer["START_SELECTED"]
                </MudButton>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Warning"
                           StartIcon="@Icons.Material.Filled.Stop"
                           OnClick="@(() => Vm!.StopSelectedContainersAsync())">
                    @Localizer["STOP_SELECTED"]
                </MudButton>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Error"
                           StartIcon="@Icons.Material.Filled.Delete"
                           OnClick="@(() => ConfirmRemoveSelected())">
                    @Localizer["REMOVE_SELECTED"]
                </MudButton>
                <MudSpacer/>
                <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth"/>
                <MudSpacer/>
            }
            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.Add"
                       OnClick="@(() => Vm!.OpenCreateDialog())">
                @Localizer["CREATE_CONTAINER"]
            </MudButton>
            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.Refresh"
                       OnClick="@(() => Vm!.RefreshContainersAsync())">
                @Localizer["REFRESH"]
            </MudButton>
        </MudStack>
    </MudStack>

    @if (Vm?.HasError == true)
    {
        <MudAlert Severity="Severity.Error" Class="mb-4" ShowCloseIcon="true"
                  CloseIconClicked="@(() => Vm!.ErrorMessage = null)">
            @Vm!.ErrorMessage
        </MudAlert>
    }

    <!-- Search and Filter Bar -->
    <MudPaper Class="pa-3 mb-3" Elevation="0">
        <MudGrid Spacing="2">
            <MudItem xs="12" md="8">
                <MudTextField @bind-Value="Vm!.SearchText"
                              Margin="Margin.Dense"
                              Label="@Localizer["SEARCH"]"
                              Placeholder="@Localizer["SEARCH_PLACEHOLDER"]"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Search"
                              Immediate="true"
                              OnKeyUp="@(() => Vm!.ApplyFilters())"
                              Variant="Variant.Outlined"/>
            </MudItem>
            <MudItem xs="12" md="4">
                <MudSelect Value="Vm!.StatusFilter"
                           Margin="Margin.Dense"
                           Label="@Localizer["FILTER_BY_STATUS"]"
                           T="string"
                           ValueChanged="@((string val) =>
                                         {
                                             Vm!.StatusFilter = val;
                                             Vm!.ApplyFilters();
                                         })"
                           Variant="Variant.Outlined">
                    <MudSelectItem Value="@("all")">@Localizer["ALL_STATUS"]</MudSelectItem>
                    <MudSelectItem Value="@("running")">@Localizer["RUNNING"]</MudSelectItem>
                    <MudSelectItem Value="@("exited")">@Localizer["STOPPED"]</MudSelectItem>
                    <MudSelectItem Value="@("paused")">@Localizer["PAUSED"]</MudSelectItem>
                </MudSelect>
            </MudItem>
        </MudGrid>
    </MudPaper>

    <!-- Batch Actions Toolbar -->
    @if (Vm?.Containers == null || Vm!.Containers.Count == 0)
    {
        <MudAlert Severity="Severity.Info">@Localizer["NO_CONTAINERS"]</MudAlert>
    }
    else
    {
        <MudPaper Class="pa-3 mb-3" Elevation="0">
            <MudGrid Spacing="2">
                <MudItem xs="1" Class="d-flex align-center">
                    <MudCheckBox T="bool" Value="@Vm!.SelectAll"
                                 ValueChanged="@((bool val) => Vm!.ToggleSelectAll())"
                                 Color="Color.Primary"/>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth"/>
                </MudItem>
                <MudItem xs="1" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["STATUS"]</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth"/>
                </MudItem>
                <MudItem xs="2" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["CONTAINER_NAME"]</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth"/>
                </MudItem>
                <MudItem xs="2" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["IMAGE"]</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth"/>
                </MudItem>
                <MudItem xs="1" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["CONTAINER_ID"]</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth"/>
                </MudItem>
                <MudItem xs="2" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["PORT_MAPPINGS"]</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth"/>
                </MudItem>
                <MudItem xs="3" Class="d-flex align-center justify-end pr-8">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">@Localizer["ACTIONS"]</MudText>
                </MudItem>
            </MudGrid>
        </MudPaper>

        <MudStack Spacing="2">
            @foreach (var container in Vm!.Containers)
            {
                <MudCard Class="pa-3">
                    <MudGrid Spacing="2">
                        <MudItem xs="1" Class="d-flex align-center">
                            <MudCheckBox T="bool"
                                         Value="@Vm!.SelectedContainerIds.Contains(container.ID)"
                                         ValueChanged="@((bool val) => Vm!.ToggleContainerSelection(container.ID))"
                                         Color="Color.Primary"/>
                        </MudItem>

                        <MudItem xs="1" Class="d-flex align-center">
                            <MudChip T="string" Color="container.StateColor" Size="Size.Small">
                                @container.State
                            </MudChip>
                        </MudItem>

                        <MudItem xs="2" Class="d-flex align-center">
                            <MudText Typo="Typo.body2"
                                     Style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                @container.ContainerName
                            </MudText>
                        </MudItem>

                        <MudItem xs="2" Class="d-flex align-center">
                            <MudText Typo="Typo.body2"
                                     Style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                @container.Image
                            </MudText>
                        </MudItem>

                        <MudItem xs="1" Class="d-flex align-center">
                            <MudText Typo="Typo.body2">@container.ShortId</MudText>
                        </MudItem>

                        <MudItem xs="2" Class="d-flex align-center">
                            @if (container.Ports != null && container.Ports.Any())
                            {
                                <MudStack Row="true" Spacing="1" Style="overflow: hidden;">
                                    @foreach (var port in container.Ports.Take(2))
                                    {
                                        <MudChip T="string" Size="Size.Small" Variant="Variant.Outlined">
                                            @if (port.PublicPort > 0)
                                            {
                                                <text>@port.PublicPort:@port.PrivatePort</text>
                                            }
                                            else
                                            {
                                                <text>@port.PrivatePort</text>
                                            }
                                        </MudChip>
                                    }
                                    @if (container.Ports.Count > 2)
                                    {
                                        <MudChip T="string" Size="Size.Small" Variant="Variant.Outlined">
                                            +@(container.Ports.Count - 2)</MudChip>
                                    }
                                </MudStack>
                            }
                            else
                            {
                                <MudText Typo="Typo.body2" Color="Color.Secondary">-</MudText>
                            }
                        </MudItem>

                        <MudItem xs="3" Class="d-flex align-center justify-end">
                            <MudStack Row="true" Spacing="1">
                                @if (container.State == "running")
                                {
                                    <MudIconButton Icon="@Icons.Material.Filled.Stop"
                                                   Color="Color.Warning"
                                                   Size="Size.Small"
                                                   OnClick="@(() => Vm!.StopContainerAsync(container.ID))"
                                                   title='@Localizer["STOP"]'/>
                                    <MudIconButton Icon="@Icons.Material.Filled.RestartAlt"
                                                   Color="Color.Info"
                                                   Size="Size.Small"
                                                   OnClick="@(() => Vm!.RestartContainerAsync(container.ID))"
                                                   title='@Localizer["RESTART"]'/>
                                    <MudIconButton Icon="@Icons.Material.Filled.Pause"
                                                   Color="Color.Secondary"
                                                   Size="Size.Small"
                                                   OnClick="@(() => Vm!.PauseContainerAsync(container.ID))"
                                                   title='@Localizer["PAUSE"]'/>
                                }
                                else if (container.State == "paused")
                                {
                                    <MudIconButton Icon="@Icons.Material.Filled.PlayArrow"
                                                   Color="Color.Success"
                                                   Size="Size.Small"
                                                   OnClick="@(() => Vm!.UnpauseContainerAsync(container.ID))"
                                                   title='@Localizer["UNPAUSE"]'/>
                                }
                                else
                                {
                                    <MudIconButton Icon="@Icons.Material.Filled.PlayArrow"
                                                   Color="Color.Success"
                                                   Size="Size.Small"
                                                   OnClick="@(() => Vm!.StartContainerAsync(container.ID))"
                                                   title='@Localizer["START"]'/>
                                }

                                <MudIconButton Icon="@Icons.Material.Filled.Article"
                                               Color="Color.Primary"
                                               Size="Size.Small"
                                               OnClick="@(() => Vm!.ShowLogsAsync(container.ID, container.ContainerName))"
                                               title='@Localizer["LOGS"]'/>

                                <MudIconButton Icon="@Icons.Material.Filled.BarChart"
                                               Color="Color.Info"
                                               Size="Size.Small"
                                               OnClick="@(() => Vm!.ShowStatsAsync(container.ID, container.ContainerName))"
                                               title='@Localizer["STATS"]'/>

                                <MudIconButton Icon="@Icons.Material.Filled.Info"
                                               Color="Color.Primary"
                                               Size="Size.Small"
                                               OnClick="@(() => Vm!.ShowInspectAsync(container.ID, container.ContainerName))"
                                               title='@Localizer["INSPECT"]'/>

                                <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                               Color="Color.Error"
                                               Size="Size.Small"
                                               OnClick="@(() => Vm!.DeleteContainerAsync(container.ID))"
                                               title='@Localizer["REMOVE"]'/>
                            </MudStack>
                        </MudItem>
                    </MudGrid>
                </MudCard>
            }
        </MudStack>
    }
</MudContainer>

<!-- Logs Dialog -->
<MudDialog @bind-Visible="Vm!.ShowLogsDialog" Options="Vm!.DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Article"
                     Class="mr-1"/> @Localizer["CONTAINER_LOGS"] - @Vm!.SelectedContainerName
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (Vm!.IsLoadingLogs)
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-2"/>
            <MudText>@Localizer["LOADING_LOGS"]</MudText>
        }
        else if (Vm!.ContainerLogs.Count == 0)
        {
            <MudAlert Severity="Severity.Info">@Localizer["NO_LOGS_AVAILABLE"]</MudAlert>
        }
        else
        {
            <MudPaper Class="pa-2"
                      Style="height: 500px; overflow-y: auto; background-color: #1e1e1e; color: #d4d4d4; font-family: monospace; font-size: 12px;">
                @foreach (var log in Vm!.ContainerLogs)
                {
                    <div>@log</div>
                }
            </MudPaper>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Vm!.CloseLogsDialog">@Localizer["CANCEL"]</MudButton>
    </DialogActions>
</MudDialog>

<!-- Container Details Dialog -->
<MudDialog @bind-Visible="Vm!.ShowInspectDialog" Options="Vm!.DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Info"
                     Class="mr-1"/> @Localizer["CONTAINER_DETAILS"] - @Vm!.SelectedContainerName
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (string.IsNullOrEmpty(Vm!.InspectJson))
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-2"/>
        }
        else
        {
            <MudPaper Class="pa-2"
                      Style="height: 500px; overflow-y: auto; background-color: #1e1e1e; color: #d4d4d4; font-family: monospace; font-size: 12px; white-space: pre;">@Vm!.InspectJson</MudPaper>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Vm!.CloseInspectDialog">@Localizer["CANCEL"]</MudButton>
    </DialogActions>
</MudDialog>

<!-- Stats Dialog -->
<MudDialog @bind-Visible="Vm!.ShowStatsDialog" Options="Vm!.DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.BarChart"
                     Class="mr-1"/> @Localizer["REAL_TIME_STATS"] - @Vm!.SelectedContainerName
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (Vm!.CurrentStats == null)
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-2"/>
            <MudText Typo="Typo.body2">@Localizer["LOADING_LOGS"]</MudText>
        }
        else
        {
            <MudGrid Spacing="3">
                <MudItem xs="12" md="6">
                    <MudPaper Class="pa-4" Elevation="2">
                        <MudStack Spacing="2">
                            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                                <MudText Typo="Typo.h6">@Localizer["CPU_USAGE"]</MudText>
                                <MudText Typo="Typo.h6" Color="Color.Primary">@Vm!.CpuPercent.ToString("0.00")%
                                </MudText>
                            </MudStack>
                            <MudProgressLinear Color="Color.Primary" Value="@Vm!.CpuPercent" Class="mt-2"/>
                        </MudStack>
                    </MudPaper>
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudPaper Class="pa-4" Elevation="2">
                        <MudStack Spacing="2">
                            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                                <MudText Typo="Typo.h6">@Localizer["MEMORY_USAGE"]</MudText>
                                <MudText Typo="Typo.h6" Color="Color.Secondary">@Vm!.MemoryPercent.ToString("0.00")%
                                </MudText>
                            </MudStack>
                            <MudProgressLinear Color="Color.Secondary" Value="@Vm!.MemoryPercent" Class="mt-2"/>
                            <MudText Typo="Typo.body2">@Vm!.MemoryUsage / @Vm!.MemoryLimit</MudText>
                        </MudStack>
                    </MudPaper>
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudPaper Class="pa-4" Elevation="2">
                        <MudStack Spacing="2">
                            <MudText Typo="Typo.h6">@Localizer["NETWORK_RX"]</MudText>
                            <MudText Typo="Typo.h5" Color="Color.Info">@Vm!.NetworkRx</MudText>
                        </MudStack>
                    </MudPaper>
                </MudItem>

                <MudItem xs="12" md="6">
                    <MudPaper Class="pa-4" Elevation="2">
                        <MudStack Spacing="2">
                            <MudText Typo="Typo.h6">@Localizer["NETWORK_TX"]</MudText>
                            <MudText Typo="Typo.h5" Color="Color.Success">@Vm!.NetworkTx</MudText>
                        </MudStack>
                    </MudPaper>
                </MudItem>
            </MudGrid>

            <MudText Typo="Typo.caption" Class="mt-4" Color="Color.Secondary">
                <MudIcon Icon="@Icons.Material.Filled.Refresh" Size="Size.Small"/> @Localizer["AUTO_REFRESH"]: 2s
            </MudText>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Vm!.CloseStatsDialog">@Localizer["CANCEL"]</MudButton>
    </DialogActions>
</MudDialog>

<!-- Create Container Dialog -->
<MudDialog @bind-Visible="Vm!.ShowCreateDialog" Options="Vm!.DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-1"/> @Localizer["CREATE_CONTAINER"]
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (!string.IsNullOrEmpty(Vm!.CreateError))
        {
            <MudAlert Severity="Severity.Error" Class="mb-3" ShowCloseIcon="true"
                      CloseIconClicked="@(() => Vm!.CreateError = null)">
                @Vm!.CreateError
            </MudAlert>
        }

        @if (!string.IsNullOrEmpty(Vm!.CreateProgress))
        {
            <MudAlert Severity="Severity.Info" Class="mb-3">
                @Vm!.CreateProgress
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mt-2"/>
            </MudAlert>
        }

        @* style="height: 60vh; overflow-y: auto;" *@
        <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-4 fixed-tabs-panel">
            <MudTabPanel Text="@Localizer["BASIC"]">
                <MudStack Spacing="3">
                    <MudTextField @bind-Value="Vm!.CreateModel.Image"
                                  Label="@Localizer["IMAGE"]"
                                  Placeholder="@Localizer["IMAGE_PLACEHOLDER"]"
                                  Required="true"
                                  Disabled="@Vm!.IsCreating"
                                  Variant="Variant.Outlined"/>

                    <MudTextField @bind-Value="Vm!.CreateModel.ContainerName"
                                  Label="@Localizer["CONTAINER_NAME"]"
                                  Placeholder="my-container"
                                  Disabled="@Vm!.IsCreating"
                                  Variant="Variant.Outlined"/>

                    <MudCheckBox @bind-Value="Vm!.CreateModel.PullIfNotExists"
                                 Label="@Localizer["AUTO_PULL_IF_MISSING"]"
                                 Disabled="@Vm!.IsCreating"
                                 Color="Color.Primary"/>

                    <MudCheckBox @bind-Value="Vm!.CreateModel.AutoStartAfterCreate"
                                 Label="@Localizer["AUTO_START_AFTER_CREATE"]"
                                 Disabled="@Vm!.IsCreating"
                                 Color="Color.Primary"/>

                    <MudText Typo="Typo.subtitle1">@Localizer["LABELS"]</MudText>
                    @foreach (var label in Vm!.CreateModel.Labels)
                    {
                        <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
                            <MudTextField @bind-Value="label.Key"
                                          Label="@Localizer["KEY"]"
                                          Disabled="@Vm!.IsCreating"
                                          Variant="Variant.Outlined"
                                          Style="flex: 1"/>
                            <MudTextField @bind-Value="label.Value"
                                          Label="@Localizer["VALUE"]"
                                          Disabled="@Vm!.IsCreating"
                                          Variant="Variant.Outlined"
                                          Style="flex: 1"/>
                            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                           Color="Color.Error"
                                           Disabled="@Vm!.IsCreating"
                                           OnClick="@(() => Vm!.CreateModel.Labels.Remove(label))"/>
                        </MudStack>
                    }
                    <MudButton StartIcon="@Icons.Material.Filled.Add"
                               Variant="Variant.Outlined"
                               Disabled="@Vm!.IsCreating"
                               OnClick="@(() => Vm!.CreateModel.Labels.Add(new LabelModel()))">
                        @Localizer["ADD_LABEL"]
                    </MudButton>
                </MudStack>
            </MudTabPanel>

            <MudTabPanel Text="@Localizer["PORTS"]">
                <MudStack Spacing="3">
                    @foreach (var port in Vm!.CreateModel.Ports)
                    {
                        <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
                            <MudTextField @bind-Value="port.HostPort"
                                          Label="@Localizer["HOST_PORT"]"
                                          Disabled="@Vm!.IsCreating"
                                          Variant="Variant.Outlined"
                                          Style="flex: 1"/>
                            <MudTextField @bind-Value="port.ContainerPort"
                                          Label="@Localizer["CONTAINER_PORT"]"
                                          Required="true"
                                          Disabled="@Vm!.IsCreating"
                                          Variant="Variant.Outlined"
                                          Style="flex: 1"/>
                            <MudSelect @bind-Value="port.Protocol"
                                       Label="@Localizer["PROTOCOL"]"
                                       Disabled="@Vm!.IsCreating"
                                       Variant="Variant.Outlined"
                                       Style="flex: 1">
                                <MudSelectItem Value="@("tcp")">@Localizer["TCP"]</MudSelectItem>
                                <MudSelectItem Value="@("udp")">@Localizer["UDP"]</MudSelectItem>
                            </MudSelect>
                            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                           Color="Color.Error"
                                           Disabled="@Vm!.IsCreating"
                                           OnClick="@(() => Vm!.CreateModel.Ports.Remove(port))"/>
                        </MudStack>
                    }
                    <MudButton StartIcon="@Icons.Material.Filled.Add"
                               Variant="Variant.Outlined"
                               Disabled="@Vm!.IsCreating"
                               OnClick="@(() => Vm!.CreateModel.Ports.Add(new PortMappingModel()))">
                        @Localizer["ADD_PORT"]
                    </MudButton>
                </MudStack>
            </MudTabPanel>

            <MudTabPanel Text="@Localizer["VOLUMES"]">
                <MudStack Spacing="3">
                    @foreach (var volume in Vm!.CreateModel.Volumes)
                    {
                        <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
                            <MudTextField @bind-Value="volume.Source"
                                          Label="@Localizer["HOST_PATH_OR_VOLUME"]"
                                          Disabled="@Vm!.IsCreating"
                                          Variant="Variant.Outlined"
                                          Style="flex: 1"/>
                            <MudTextField @bind-Value="volume.Target"
                                          Label="@Localizer["CONTAINER_PATH"]"
                                          Required="true"
                                          Disabled="@Vm!.IsCreating"
                                          Variant="Variant.Outlined"
                                          Style="flex: 1"/>
                            <MudSelect @bind-Value="volume.Mode"
                                       Label="@Localizer["MODE"]"
                                       Disabled="@Vm!.IsCreating"
                                       Variant="Variant.Outlined"
                                       Style="flex: 1">
                                <MudSelectItem Value="@("rw")">@Localizer["READ_WRITE"]</MudSelectItem>
                                <MudSelectItem Value="@("ro")">@Localizer["READ_ONLY"]</MudSelectItem>
                            </MudSelect>
                            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                           Color="Color.Error"
                                           Disabled="@Vm!.IsCreating"
                                           OnClick="@(() => Vm!.CreateModel.Volumes.Remove(volume))"/>
                        </MudStack>
                    }
                    <MudButton StartIcon="@Icons.Material.Filled.Add"
                               Variant="Variant.Outlined"
                               Disabled="@Vm!.IsCreating"
                               OnClick="@(() => Vm!.CreateModel.Volumes.Add(new VolumeModel()))">
                        @Localizer["ADD_VOLUME"]
                    </MudButton>
                </MudStack>
            </MudTabPanel>

            <MudTabPanel Text="@Localizer["ENV_VARIABLES"]">
                <MudStack Spacing="3">
                    @foreach (var env in Vm!.CreateModel.EnvironmentVariables)
                    {
                        <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
                            <MudTextField @bind-Value="env.Key"
                                          Label="@Localizer["KEY"]"
                                          Required="true"
                                          Disabled="@Vm!.IsCreating"
                                          Variant="Variant.Outlined"
                                          Style="flex: 1"/>
                            <MudTextField @bind-Value="env.Value"
                                          Label="@Localizer["VALUE"]"
                                          Disabled="@Vm!.IsCreating"
                                          Variant="Variant.Outlined"
                                          Style="flex: 1"/>
                            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                           Color="Color.Error"
                                           Disabled="@Vm!.IsCreating"
                                           OnClick="@(() => Vm!.CreateModel.EnvironmentVariables.Remove(env))"/>
                        </MudStack>
                    }
                    <MudButton StartIcon="@Icons.Material.Filled.Add"
                               Variant="Variant.Outlined"
                               Disabled="@Vm!.IsCreating"
                               OnClick="@(() => Vm!.CreateModel.EnvironmentVariables.Add(new EnvironmentVariableModel()))">
                        @Localizer["ADD_ENV"]
                    </MudButton>
                </MudStack>
            </MudTabPanel>

            <MudTabPanel Text="@Localizer["NETWORK"]">
                <MudStack Spacing="3">
                    <MudSelect @bind-Value="Vm!.CreateModel.NetworkMode"
                               Label="@Localizer["SELECT_NETWORK"]"
                               Disabled="@Vm!.IsCreating"
                               Variant="Variant.Outlined">
                        <MudSelectItem Value="@("bridge")">bridge</MudSelectItem>
                        <MudSelectItem Value="@("host")">host</MudSelectItem>
                        <MudSelectItem Value="@("none")">none</MudSelectItem>
                        @foreach (var network in Vm!.AvailableNetworks)
                        {
                            <MudSelectItem Value="@network.Name">@network.Name</MudSelectItem>
                        }
                    </MudSelect>

                    <MudTextField @bind-Value="Vm!.CreateModel.IPv4Address"
                                  Label="@Localizer["IPV4_ADDRESS"]"
                                  Placeholder="192.168.1.100"
                                  Disabled="@Vm!.IsCreating"
                                  Variant="Variant.Outlined"/>

                    <MudText Typo="Typo.subtitle1">@Localizer["ALIASES"]</MudText>
                    @foreach (var alias in Vm!.CreateModel.NetworkAliases.ToList())
                    {
                        <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
                            <MudTextField Value="@alias"
                                          ValueChanged="@((string val) =>
                                                        {
                                                            var idx = Vm!.CreateModel.NetworkAliases.IndexOf(alias);
                                                            if (idx >= 0) Vm!.CreateModel.NetworkAliases[idx] = val;
                                                        })"
                                          Label="@Localizer["ALIASES"]"
                                          Disabled="@Vm!.IsCreating"
                                          Variant="Variant.Outlined"
                                          Style="flex: 1"/>
                            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                           Color="Color.Error"
                                           Disabled="@Vm!.IsCreating"
                                           OnClick="@(() => Vm!.CreateModel.NetworkAliases.Remove(alias))"/>
                        </MudStack>
                    }
                    <MudButton StartIcon="@Icons.Material.Filled.Add"
                               Variant="Variant.Outlined"
                               Disabled="@Vm!.IsCreating"
                               OnClick="@(() => Vm!.CreateModel.NetworkAliases.Add(""))">
                        @Localizer["ADD_LABEL"]
                    </MudButton>
                </MudStack>
            </MudTabPanel>

            <MudTabPanel Text="@Localizer["RESOURCES"]">
                <MudStack Spacing="3">
                    <MudNumericField @bind-Value="Vm!.CreateModel.CpuLimit"
                                     Label="@Localizer["CPU_LIMIT"]"
                                     Min="0"
                                     Step="0.1"
                                     Disabled="@Vm!.IsCreating"
                                     Variant="Variant.Outlined"
                                     HideSpinButtons="false"/>

                    <MudNumericField @bind-Value="Vm!.CreateModel.MemoryLimitMiB"
                                     Label="@Localizer["MEMORY_LIMIT_MIB"]"
                                     Min="0"
                                     Disabled="@Vm!.IsCreating"
                                     Variant="Variant.Outlined"
                                     HideSpinButtons="false"/>

                    <MudSelect @bind-Value="Vm!.CreateModel.RestartPolicyType"
                               Label="@Localizer["RESTART_POLICY"]"
                               Disabled="@Vm!.IsCreating"
                               Variant="Variant.Outlined">
                        <MudSelectItem Value="@("no")">@Localizer["NO_RESTART"]</MudSelectItem>
                        <MudSelectItem Value="@("always")">@Localizer["ALWAYS"]</MudSelectItem>
                        <MudSelectItem Value="@("unless-stopped")">@Localizer["UNLESS_STOPPED"]</MudSelectItem>
                        <MudSelectItem Value="@("on-failure")">@Localizer["ON_FAILURE"]</MudSelectItem>
                    </MudSelect>

                    @if (Vm!.CreateModel.RestartPolicyType == "on-failure")
                    {
                        <MudNumericField @bind-Value="Vm!.CreateModel.MaximumRetryCount"
                                         Label="@Localizer["MAX_RETRY"]"
                                         Min="0"
                                         Disabled="@Vm!.IsCreating"
                                         Variant="Variant.Outlined"
                                         HideSpinButtons="false"/>
                    }
                </MudStack>
            </MudTabPanel>

            <MudTabPanel Text="@Localizer["ADVANCED"]">
                <MudStack Spacing="3">
                    <MudTextField @bind-Value="@Vm!.CreateModel.EntryPointText"
                                  Label="@Localizer["ENTRYPOINT"]"
                                  Lines="3"
                                  Placeholder="/bin/sh"
                                  Disabled="@Vm!.IsCreating"
                                  Variant="Variant.Outlined"
                                  HelperText="One per line or space-separated"/>

                    <MudTextField @bind-Value="@Vm!.CreateModel.CommandText"
                                  Label="@Localizer["COMMAND"]"
                                  Lines="3"
                                  Placeholder="-c echo hello"
                                  Disabled="@Vm!.IsCreating"
                                  Variant="Variant.Outlined"
                                  HelperText="One per line or space-separated"/>

                    <MudTextField @bind-Value="Vm!.CreateModel.WorkingDir"
                                  Label="@Localizer["WORKING_DIR"]"
                                  Placeholder="/app"
                                  Disabled="@Vm!.IsCreating"
                                  Variant="Variant.Outlined"/>

                    <MudCheckBox @bind-Value="Vm!.CreateModel.Tty"
                                 Label="@Localizer["TTY"]"
                                 Disabled="@Vm!.IsCreating"
                                 Color="Color.Primary"/>

                    <MudCheckBox @bind-Value="Vm!.CreateModel.AttachStdin"
                                 Label="@Localizer["ATTACH_STDIN"]"
                                 Disabled="@Vm!.IsCreating"
                                 Color="Color.Primary"/>

                    <MudCheckBox @bind-Value="Vm!.CreateModel.AttachStdout"
                                 Label="@Localizer["ATTACH_STDOUT"]"
                                 Disabled="@Vm!.IsCreating"
                                 Color="Color.Primary"/>

                    <MudCheckBox @bind-Value="Vm!.CreateModel.AttachStderr"
                                 Label="@Localizer["ATTACH_STDERR"]"
                                 Disabled="@Vm!.IsCreating"
                                 Color="Color.Primary"/>
                </MudStack>
            </MudTabPanel>
        </MudTabs>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Vm!.CloseCreateDialog" Disabled="@Vm!.IsCreating">@Localizer["CANCEL"]</MudButton>
        <MudButton Color="Color.Primary"
                   Variant="Variant.Filled"
                   OnClick="@(() => Vm!.CreateContainerAsync())"
                   Disabled="@Vm!.IsCreating">
            @if (Vm!.IsCreating)
            {
                <MudProgressCircular Class="mr-2" Size="Size.Small" Indeterminate="true"/>
            }
            @Localizer["CREATE"]
        </MudButton>
    </DialogActions>
</MudDialog>

<style>
    .fixed-tabs-panel {
        height: 60vh;
        overflow-y: auto;
    }
</style>

@code {
    [Inject] private IDialogService DialogService { get; set; } = default!;

    private async Task ConfirmRemoveSelected()
    {
        if (Vm?.SelectedContainerIds == null || Vm!.SelectedContainerIds.Count == 0)
        {
            return;
        }

        var parameters = new DialogParameters
        {
            { "ContentText", Localizer["CONFIRM_REMOVE_SELECTED", Vm!.SelectedContainerIds.Count] },
            { "ButtonText", Localizer["REMOVE"] },
            { "Color", Color.Error }
        };

        var dialog = await DialogService.ShowAsync<MudMessageBox>(Localizer["REMOVE_SELECTED"], parameters);
        var result = await dialog.Result;

        if (result != null && !result.Canceled)
        {
            await Vm!.RemoveSelectedContainersAsync();
        }
    }
}