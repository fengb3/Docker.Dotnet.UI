@page "/Images"
@using Docker.DotNet
@using Docker.DotNet.Models
@using Docker.Dotnet.UI.ViewModels

@inherits MyComponentBase<Docker.Dotnet.UI.ViewModels.ImagesPageViewModel>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-4">
    <MudText Typo="Typo.h4" Class="mb-4">Docker Images</MudText>
    
    @if (Vm.Images == null || Vm.Images.Count == 0)
    {
        <MudAlert Severity="Severity.Info">暂无镜像</MudAlert>
    }
    else
    {
        <MudPaper Class="pa-3 mb-3" Elevation="0" >
            <MudGrid Spacing="2">
                <MudItem xs="3" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">镜像名称</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>  
                <MudItem xs="2" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">镜像 ID</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="2" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">大小</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="2" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">创建时间</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="1" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">容器数</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="2" Class="d-flex align-center justify-end pr-8">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">操作</MudText>
                </MudItem>
            </MudGrid>
        </MudPaper>
        
        <MudStack Spacing="2">
            @foreach (var image in Vm.Images)
            {
                <MudCard Class="pa-3">
                    <MudGrid Spacing="2">
                        <MudItem xs="3" Class="d-flex align-center">
                            <MudText Typo="Typo.body2" Style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                @image.ImageName
                            </MudText>
                        </MudItem>
                        
                        <MudItem xs="2" Class="d-flex align-center">
                            <MudText Typo="Typo.body2">@image.ShortId</MudText>
                        </MudItem>
                        
                        <MudItem xs="2" Class="d-flex align-center">
                            <MudText Typo="Typo.body2">@image.SizeFormatted</MudText>
                        </MudItem>
                        
                        <MudItem xs="2" Class="d-flex align-center">
                            <MudText Typo="Typo.body2">@image.Created.ToString("yyyy-MM-dd HH:mm")</MudText>
                        </MudItem>
                        
                        <MudItem xs="1" Class="d-flex align-center">
                            <MudChip T="string" Size="Size.Small" Variant="Variant.Outlined">
                                @image.Containers
                            </MudChip>
                        </MudItem>
                        
                        <MudItem xs="2" Class="d-flex align-center justify-end">
                            <MudStack Row="true" Spacing="1">
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" 
                                               Color="Color.Error"
                                               Size="Size.Small"
                                               OnClick="@(() => HandleDeleteImage(image.ID))"
                                               Title="删除" />
                                
                                <MudIconButton Icon="@Icons.Material.Filled.Info" 
                                               Color="Color.Primary"
                                               Size="Size.Small"
                                               OnClick="@(() => HandleViewDetails(image.ID))"
                                               Title="详情" />
                            </MudStack>
                        </MudItem>
                    </MudGrid>
                </MudCard>
            }
        </MudStack>
    }
</MudContainer>

@code {
    
    private async Task HandleDeleteImage(string imageId)
    {
        await Vm.DeleteImageAsync(imageId);
    }
    
    private void HandleViewDetails(string imageId)
    {
        // 暂不实现
    }
}