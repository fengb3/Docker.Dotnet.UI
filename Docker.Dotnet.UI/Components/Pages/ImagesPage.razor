@page "/Images"
@using Docker.DotNet
@using Docker.DotNet.Models
@using Docker.Dotnet.UI.ViewModels
@using Microsoft.AspNetCore.Components.Forms
@implements IDisposable

@inherits MyComponentBase<Docker.Dotnet.UI.ViewModels.ImagesPageViewModel>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-4">
    <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Class="mb-4">
        <MudText Typo="Typo.h4">Docker Images</MudText>
        <MudButton Variant="Variant.Filled" 
                   Color="Color.Primary" 
                   StartIcon="@Icons.Material.Filled.Add"
                   OnClick="Vm.OpenAddImageDialog">
            添加镜像
        </MudButton>
    </MudStack>
    
    @if (Vm.Images == null || Vm.Images.Count == 0)
    {
        <MudAlert Severity="Severity.Info">暂无镜像</MudAlert>
    }
    else
    {
        <MudPaper Class="pa-3 mb-3" Elevation="0" >
            <MudGrid Spacing="2">
                <MudItem xs="3" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">镜像名称</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>  
                <MudItem xs="2" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">镜像 ID</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="2" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">大小</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="2" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">创建时间</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="1" Class="d-flex align-center">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">容器数</MudText>
                    <MudSpacer/>
                    <MudDivider Vertical FlexItem DividerType="DividerType.FullWidth" />
                </MudItem>
                <MudItem xs="2" Class="d-flex align-center justify-end pr-8">
                    <MudText Typo="Typo.subtitle2" Color="Color.Surface">操作</MudText>
                </MudItem>
            </MudGrid>
        </MudPaper>
        
        <MudStack Spacing="2">
            @foreach (var image in Vm.Images)
            {
                <MudCard Class="pa-3">
                    <MudGrid Spacing="2">
                        <MudItem xs="3" Class="d-flex align-center">
                            <MudText Typo="Typo.body2" Style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                @image.ImageName
                            </MudText>
                        </MudItem>
                        
                        <MudItem xs="2" Class="d-flex align-center">
                            <MudText Typo="Typo.body2">@image.ShortId</MudText>
                        </MudItem>
                        
                        <MudItem xs="2" Class="d-flex align-center">
                            <MudText Typo="Typo.body2">@image.SizeFormatted</MudText>
                        </MudItem>
                        
                        <MudItem xs="2" Class="d-flex align-center">
                            <MudText Typo="Typo.body2">@image.Created.ToString("yyyy-MM-dd HH:mm")</MudText>
                        </MudItem>
                        
                        <MudItem xs="1" Class="d-flex align-center">
                            <MudChip T="string" Size="Size.Small" Variant="Variant.Outlined">
                                @image.Containers
                            </MudChip>
                        </MudItem>
                        
                        <MudItem xs="2" Class="d-flex align-center justify-end">
                            <MudStack Row="true" Spacing="1">
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" 
                                               Color="Color.Error"
                                               Size="Size.Small"
                                               OnClick="@(() => Vm.DeleteImageAsync(image.ID))"
                                               Title="删除" />
                                
                                <MudIconButton Icon="@Icons.Material.Filled.Info" 
                                               Color="Color.Primary"
                                               Size="Size.Small"
                                               OnClick="@(() => Vm.GoToImageDetailsAsync(image.ID))"
                                               Title="详情" />
                            </MudStack>
                        </MudItem>
                    </MudGrid>
                </MudCard>
            }
        </MudStack>
    }
</MudContainer>

<MudDialog @bind-Visible="Vm.ShowAddImageDialog" Options="Vm.DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-1" /> 添加镜像
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTabs ApplyEffectsToContainer="true" PanelClass="pa-4" Style="min-height: 500px;">
            <MudTabPanel Text="从注册表拉取" Icon="@Icons.Material.Filled.CloudDownload">
                <MudStack Spacing="3">
                    <MudTextField @bind-Value="Vm.PullImageName"
                                  Label="镜像名称"
                                  Placeholder="例如: nginx, mysql, ubuntu"
                                  Variant="Variant.Outlined"
                                  Required="true"
                                  Disabled="Vm.IsPulling" />
                    
                    <MudTextField @bind-Value="Vm.PullImageTag"
                                  Label="标签"
                                  Placeholder="例如: latest, 8.0"
                                  Variant="Variant.Outlined"
                                  Required="true"
                                  Disabled="Vm.IsPulling" />
                    
                    <MudPaper Class="pa-3" Elevation="0" Style="min-height: 200px;">
                        @if (Vm.IsPulling)
                        {
                            <MudText Typo="Typo.subtitle2" Class="mb-2">拉取进度：</MudText>
                            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-2" />
                            <MudPaper Class="pa-2" Style="height: 250px; overflow-y: auto; background-color: #1e1e1e; color: #d4d4d4; font-family: monospace; font-size: 12px;">
                                @foreach (var log in Vm.PullLogs)
                                {
                                    <div>@log</div>
                                }
                            </MudPaper>
                        }
                    </MudPaper>
                    
                    <MudStack Row="true" Justify="Justify.FlexEnd" Spacing="2">
                        <MudButton Variant="Variant.Text" 
                                   OnClick="Vm.CloseDialog"
                                   Disabled="Vm.IsPulling">
                            取消
                        </MudButton>
                        <MudButton Variant="Variant.Filled" 
                                   Color="Color.Primary"
                                   OnClick="Vm.HandlePullImageAsync"
                                   Disabled="Vm.IsPulling || string.IsNullOrWhiteSpace(Vm.PullImageName)">
                            @(Vm.IsPulling ? "拉取中..." : "拉取镜像")
                        </MudButton>
                    </MudStack>
                </MudStack>
            </MudTabPanel>
            
            <MudTabPanel Text="从 Tarball 导入" Icon="@Icons.Material.Filled.Upload">
                <MudStack Spacing="3">
                    <MudFileUpload T="IBrowserFile" 
                                   Accept=".tar,.tar.gz,.tgz"
                                   FilesChanged="Vm.OnTarballSelected"
                                   MaximumFileCount="1"
                                   Disabled="Vm.IsLoading">
                        <ActivatorContent>
                            <MudButton Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       StartIcon="@Icons.Material.Filled.CloudUpload"
                                       Disabled="Vm.IsLoading">
                                选择 Tarball 文件
                            </MudButton>
                        </ActivatorContent>
                    </MudFileUpload>
                    
                    @if (Vm.SelectedTarball != null)
                    {
                        <MudChip T="string" 
                                 Color="Color.Info" 
                                 Icon="@Icons.Material.Filled.InsertDriveFile"
                                 OnClose="Vm.ClearTarballSelection">
                            @Vm.SelectedTarball.Name (@Vm.FormatFileSize(Vm.SelectedTarball.Size))
                        </MudChip>
                    }
                    
                    <MudPaper Class="pa-3" Elevation="0" Style="min-height: 200px;">
                        @if (Vm.IsLoading)
                        {
                            <MudText Typo="Typo.subtitle2" Class="mb-2">导入进度：</MudText>
                            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mb-2" />
                            <MudPaper Class="pa-2" Style="height: 250px; overflow-y: auto; background-color: #1e1e1e; color: #d4d4d4; font-family: monospace; font-size: 12px;">
                                @foreach (var log in Vm.LoadLogs)
                                {
                                    <div>@log</div>
                                }
                            </MudPaper>
                        }
                    </MudPaper>
                    
                    <MudStack Row="true" Justify="Justify.FlexEnd" Spacing="2">
                        <MudButton Variant="Variant.Text" 
                                   OnClick="Vm.CloseDialog"
                                   Disabled="Vm.IsLoading">
                            取消
                        </MudButton>
                        <MudButton Variant="Variant.Filled" 
                                   Color="Color.Primary"
                                   OnClick="Vm.HandleLoadFromTarballAsync"
                                   Disabled="Vm.IsLoading || Vm.SelectedTarball == null">
                            @(Vm.IsLoading ? "导入中..." : "导入镜像")
                        </MudButton>
                    </MudStack>
                </MudStack>
            </MudTabPanel>
        </MudTabs>
    </DialogContent>
</MudDialog>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Vm.OnStateChanged += StateHasChanged;
    }

    public void Dispose()
    {
        Vm.OnStateChanged -= StateHasChanged;
    }
}
